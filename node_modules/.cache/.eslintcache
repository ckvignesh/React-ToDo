[{"/home/ckvignesh/Project/React-ToDo/src/index.js":"1","/home/ckvignesh/Project/React-ToDo/src/App.js":"2","/home/ckvignesh/Project/React-ToDo/src/reportWebVitals.js":"3","/home/ckvignesh/Project/React-ToDo/src/components/Todolist.js":"4","/home/ckvignesh/Project/React-ToDo/src/components/Form.js":"5","/home/ckvignesh/Project/React-ToDo/src/components/Todo.js":"6"},{"size":500,"mtime":1626151702587,"results":"7","hashOfConfig":"8"},{"size":1595,"mtime":1626238818483,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1626151702587,"results":"10","hashOfConfig":"8"},{"size":491,"mtime":1626182499336,"results":"11","hashOfConfig":"8"},{"size":1124,"mtime":1626180850268,"results":"12","hashOfConfig":"8"},{"size":869,"mtime":1626180445734,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"d60tle",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/ckvignesh/Project/React-ToDo/src/index.js",[],["28","29"],"/home/ckvignesh/Project/React-ToDo/src/App.js",["30"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Todolist from './components/Todolist';\n\nfunction App() {\n\n  const[inputText, setInputText] = useState(\"\");\n  const[todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []); \n\n  useEffect(() => {\n  const filterHandler = () => {\n    \n    switch(status){\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true))\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n    filterHandler();\n  }, [todos, status]);\n  \n  const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos))  ;\n  };\n  const getLocalTodos = () => {\n    if(localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else{\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n\n  return (\n    <div className=\"App\">\n     <header>\n     <h1> My To Do List </h1>\n     </header>\n     <Form \n     inputText={inputText} \n     todos={todos} \n     setTodos={setTodos} \n     setInputText={setInputText}\n     setStatus={setStatus}\n     />\n     <Todolist\n     filteredTodos={filteredTodos} \n     setTodos={setTodos} \n     todos={todos} />\n    </div>\n  );\n}\n\nexport default App;\n","/home/ckvignesh/Project/React-ToDo/src/reportWebVitals.js",[],"/home/ckvignesh/Project/React-ToDo/src/components/Todolist.js",[],"/home/ckvignesh/Project/React-ToDo/src/components/Form.js",[],"/home/ckvignesh/Project/React-ToDo/src/components/Todo.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":36,"column":9,"nodeType":"37","messageId":"38","endLine":36,"endColumn":23},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'saveLocalTodos' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]